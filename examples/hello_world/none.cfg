FEATURES {
    STARTADDRESS: default = $8000;
}
SYMBOLS {
    __LOADADDR__:   type = import;
    __STACKSIZE__:  type = weak, value = $00FF; # 255 byte stack
    __STACKSTART__: type = weak, value = $0100;
    __ZPSTART__:    type = weak, value = $0000;
}
MEMORY {
    ZP:       file = "",     define = yes, start = __ZPSTART__, size = $001F;
    MAIN:     file = %O,     define = yes, start = %S,          size = %S - 4, fill = yes;
    RAM:                     define = yes, start = $0100,       size = $3EFF;
    LOADADDR: file = %O,                   start = %S - 2,      size = $0004, fill = yes;
}
SEGMENTS {
    ZEROPAGE: load = ZP,   type = zp;
    LOADADDR: load = LOADADDR, type = ro;
    STARTUP:  load = MAIN, type = ro,  optional = yes;
    LOWCODE:  load = MAIN, type = ro,  optional = yes;
    ONCE:     load = MAIN, type = ro,  optional = yes;
    DATA:     load = MAIN, type = ro,  define   = yes, run = RAM;
    CODE:     load = MAIN, type = ro;
    RODATA:   load = MAIN, type = ro;
    INIT:     load = MAIN, type = ro;
    HEAP:     load = RAM,  type = bss, optional = yes;
    BSS:      load = RAM,  type = bss, define   = yes;
}
FEATURES {
    CONDES: type    = constructor,
            label   = __CONSTRUCTOR_TABLE__,
            count   = __CONSTRUCTOR_COUNT__,
            segment = ONCE;
    CONDES: type    = destructor,
            label   = __DESTRUCTOR_TABLE__,
            count   = __DESTRUCTOR_COUNT__,
            segment = RODATA;
    CONDES: type    = interruptor,
            label   = __INTERRUPTOR_TABLE__,
            count   = __INTERRUPTOR_COUNT__,
            segment = RODATA,
            import  = __CALLIRQ__;
}
